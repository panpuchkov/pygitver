[tox]
envlist =
    checks
    py3{7,8,9,10,11,12}
isolated_build = True
skip_missing_interpreters = True

[gh-actions]
python =
    # setuptools >=62 needs Python >=3.7
    3.7: py37,check
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312


[testenv]
description = Run test suite for {basepython}
skip_install = true
commands = pytest {posargs:}
deps =
    pytest
    pytest-cov
    setuptools>=62.0
    setuptools-scm
    Jinja2
setenv =
    PIP_DISABLE_PIP_VERSION_CHECK = 1


[testenv:black]
description = Check for formatting changes
basepython = python3
skip_install = true
deps = black
commands = black --check -v {posargs:./src}


[testenv:flake8]
description = Check code style
basepython = python3
deps = flake8
commands = flake8 --config .flake8rc {posargs:}


[testenv:mypy]
description = Check code style
basepython = python3
deps = mypy
commands = mypy {posargs:--ignore-missing-imports --check-untyped-defs src}


[testenv:docstrings]
description = Check for PEP257 compatible docstrings
basepython = python3
deps = docformatter
commands = docformatter --check --diff {posargs:--pre-summary-newline -r src}

[testenv:coverage]
description = Test coverage
basepython = python3
deps =
    -rrequirements.txt
    pytest
    pytest-cov
commands =
    coverage run -m pytest
    coverage report -m

[testenv:checks]
description = Run code style checks
basepython = python3
deps =
    {[testenv:black]deps}
    {[testenv:flake8]deps}
    {[testenv:mypy]deps}
    {[testenv:docstrings]deps}
    {[testenv:coverage]deps}
commands =
    {[testenv:black]commands}
    {[testenv:flake8]commands}
    {[testenv:mypy]commands}
    {[testenv:docstrings]commands}
    {[testenv:coverage]commands}
