name: Docker Build & Push
permissions: write-all

on:
  push:
    branches:
      - main
      - feat/*
      - feature/*
      - fix/*
      - bugfix/*
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: 'pygitver'
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  unittests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Dockerfile lint
        if: ${{ env.IMAGE_EXIST == 'false' }}
        id: validate-dockerfile
        shell: bash
        run: |
          docker run --rm -e HADOLINT_IGNORE=DL3007,DL3008,DL3018,DL4006,DL3013 -i hadolint/hadolint < Dockerfile

      - name: Unit Tests
        shell: bash
        run: |
          set -x
          pip install -U tox
          pip install tox
          tox
  build:
    runs-on: ubuntu-latest
    needs: unittests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Docker Build
        shell: bash
        run: |
          set -x
          docker build -t "${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}" .

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Push
        shell: bash
        run: |
          set -x
          DOCKER_TAG="$(git tag --contains)"
          if [[ "${DOCKER_TAG}" == "" ]]; then
            DOCKER_TAG="latest"
          fi
          IMAGE_NAME_WITH_VERSION="${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${DOCKER_TAG}"
          docker push "${IMAGE_NAME_WITH_VERSION}"
